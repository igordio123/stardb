{"ast":null,"code":"import _classCallCheck from \"C:\\\\stardb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\stardb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\stardb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\stardb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\stardb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\stardb\\\\src\\\\components\\\\random-plane\\\\random-planet.js\";\nimport React from 'react';\nimport './random-planet.css';\nimport SwapiService from '../../services/SwapiService.js';\n\nvar Planets =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Planets, _React$Component);\n\n  function Planets(props) {\n    var _this;\n\n    _classCallCheck(this, Planets);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Planets).call(this, props));\n    _this.swapiInf = new SwapiService();\n    _this.state = {\n      id: null,\n      name: null,\n      population: null,\n      RotationPeriod: null,\n      Diameter: null\n    };\n    setTimeout(_this.updatePlanet(), 2000);\n    return _this;\n  }\n\n  _createClass(Planets, [{\n    key: \"updatePlanet\",\n    value: function updatePlanet() {\n      var _this2 = this;\n\n      var id = Math.floor(Math.random() * 11);\n      this.swapiInf.getPlanet(id).then(function (res) {\n        _this2.setState({\n          id: id,\n          name: res.name,\n          population: res.population,\n          Diameter: res.diameter,\n          RotationPeriod: res.rotation_period\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          id = _this$state.id,\n          population = _this$state.population,\n          RotationPeriod = _this$state.RotationPeriod,\n          Diameter = _this$state.Diameter,\n          name = _this$state.name;\n      return React.createElement(\"div\", {\n        className: \"random-planet \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row main-planet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"img-planet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://starwars-visualguide.com././assets/img/planets/\".concat(id, \".jpg\"),\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"planet-person\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, name), React.createElement(\"ul\", {\n        className: \"list-group-flush\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Population\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, population)), React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"RotationPeriod :\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, RotationPeriod)), React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Diameter :\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, Diameter))))));\n    }\n  }]);\n\n  return Planets;\n}(React.Component);\n\n;\nexport default Planets;","map":{"version":3,"sources":["C:\\stardb\\src\\components\\random-plane\\random-planet.js"],"names":["React","SwapiService","Planets","props","swapiInf","state","id","name","population","RotationPeriod","Diameter","setTimeout","updatePlanet","Math","floor","random","getPlanet","then","res","setState","diameter","rotation_period","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './random-planet.css'\r\nimport SwapiService from '../../services/SwapiService.js'\r\n\r\n\r\n\r\nclass Planets extends React.Component{\r\n\r\n\r\n  swapiInf = new SwapiService();\r\n  state ={\r\n    id:null,\r\n    name:null,\r\n    population : null,\r\n    RotationPeriod:null,\r\n    Diameter : null\r\n\r\n\r\n  };\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    setTimeout(this.updatePlanet(),2000)\r\n  };\r\n\r\n\r\n  updatePlanet(){\r\n    const id = Math.floor(Math.random()*11);\r\n\r\n    this.swapiInf.getPlanet(id)\r\n      .then(res=>{\r\n        this.setState({\r\n          id:id,\r\n          name:res.name,\r\n          population :res.population,\r\n          Diameter:res.diameter,\r\n          RotationPeriod:res.rotation_period\r\n        })\r\n\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n\r\n\r\n    const{id,population,RotationPeriod,Diameter,name} = this.state;\r\n\r\n    return (\r\n      <div className=\"random-planet \">\r\n        <div className=\"row main-planet\">\r\n          <div className='img-planet'>\r\n            <img src={`https://starwars-visualguide.com././assets/img/planets/${id}.jpg`} alt=\"\"/>\r\n          </div>\r\n          <div className='planet-person'>\r\n            <h4>{name}</h4>\r\n            <ul className='list-group-flush'>\r\n              <li className='list-group-item'>\r\n                <span>Population</span><span>{population\r\n              }</span>\r\n              </li>\r\n              <li className='list-group-item'>\r\n                <span>RotationPeriod :</span><span>{RotationPeriod}</span>\r\n              </li>\r\n              <li className='list-group-item'>\r\n                <span>Diameter :</span><span>{Diameter}</span>\r\n              </li>\r\n\r\n\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\nexport default Planets\r\n"]},"metadata":{},"sourceType":"module"}