{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\stardb\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\stardb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\stardb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\stardb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar SwapiService =\n/*#__PURE__*/\nfunction () {\n  function SwapiService() {\n    _classCallCheck(this, SwapiService);\n  }\n\n  _createClass(SwapiService, [{\n    key: \"getBody\",\n    value: function () {\n      var _getBody = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(url) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(url);\n\n              case 2:\n                res = _context.sent;\n\n                if (res.ok) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(res.status);\n\n              case 5:\n                console.log(res.json().results);\n                return _context.abrupt(\"return\", res.json());\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getBody(_x) {\n        return _getBody.apply(this, arguments);\n      }\n\n      return getBody;\n    }()\n  }, {\n    key: \"getPeople\",\n    value: function getPeople() {\n      this.getBody(\"https://swapi.co/api/people/\");\n    }\n  }, {\n    key: \"getStarShips\",\n    value: function getStarShips() {\n      var results = this.getBody(\"https://swapi.co/api/starships/\");\n      return results.results;\n    }\n  }, {\n    key: \"getPlanets\",\n    value: function getPlanets() {\n      this.getBody(\"https://swapi.co/api/planets/\");\n    }\n  }]);\n\n  return SwapiService;\n}();\n\n;\nvar swapi = new SwapiService();\nswapi.getBody(\"https://swapi.co/api/starships/\");","map":{"version":3,"sources":["C:\\stardb\\src\\index.js"],"names":["SwapiService","url","fetch","res","ok","Error","status","console","log","json","results","getBody","swapi"],"mappings":";;;;;IAAMA,Y;;;;;;;;;;;;gDACSC,G;;;;;;;uBACOC,KAAK,CAACD,GAAD,C;;;AAAjBE,gBAAAA,G;;oBACFA,GAAG,CAACC,E;;;;;sBACA,IAAIC,KAAJ,CAAUF,GAAG,CAACG,MAAd,C;;;AAERC,gBAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACM,IAAJ,GAAWC,OAAvB;iDACMP,GAAG,CAACM,IAAJ,E;;;;;;;;;;;;;;;;;;gCAIE;AACT,WAAKE,OAAL,CAAa,8BAAb;AACD;;;mCACa;AACZ,UAAID,OAAO,GAAG,KAAKC,OAAL,CAAa,iCAAb,CAAd;AACA,aAAOD,OAAO,CAACA,OAAf;AAGD;;;iCACW;AACV,WAAKC,OAAL,CAAa,+BAAb;AACD;;;;;;AACD;AAGD,IAAMC,KAAK,GAAG,IAAIZ,YAAJ,EAAd;AACAY,KAAK,CAACD,OAAN,CAAc,iCAAd","sourcesContent":["class SwapiService{\n async getBody(url){\n    const res = await fetch(url);\n    if(!res.ok){\n      throw new Error(res.status)\n    }\n    console.log(res.json().results)\n   return res.json()\n\n\n  };\n getPeople(){\n   this.getBody(\"https://swapi.co/api/people/\")\n };\n getStarShips(){\n   let results = this.getBody(\"https://swapi.co/api/starships/\");\n   return results.results\n\n\n }\n getPlanets(){\n   this.getBody(\"https://swapi.co/api/planets/\")\n }\n};\n\n\nconst swapi = new SwapiService();\nswapi.getBody(\"https://swapi.co/api/starships/\");\n"]},"metadata":{},"sourceType":"module"}