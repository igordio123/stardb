{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\stardb\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\stardb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\stardb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\stardb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar SwapiService =\n/*#__PURE__*/\nfunction () {\n  function SwapiService() {\n    _classCallCheck(this, SwapiService);\n  }\n\n  _createClass(SwapiService, [{\n    key: \"getBody\",\n    value: function () {\n      var _getBody = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(url) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(url);\n\n              case 2:\n                res = _context.sent;\n\n                if (res.ok) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(res.status);\n\n              case 5:\n                _context.next = 7;\n                return res.json();\n\n              case 7:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getBody(_x) {\n        return _getBody.apply(this, arguments);\n      }\n\n      return getBody;\n    }()\n  }, {\n    key: \"getPeople\",\n    value: function getPeople() {\n      this.getBody(\"https://swapi.co/api/people/\");\n    }\n  }, {\n    key: \"getStarShips\",\n    value: function () {\n      var _getStarShips = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.getBody(\"https://swapi.co/api/starships/\");\n\n              case 2:\n                res = _context2.sent;\n                return _context2.abrupt(\"return\", res.results);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getStarShips() {\n        return _getStarShips.apply(this, arguments);\n      }\n\n      return getStarShips;\n    }()\n  }, {\n    key: \"getPlanets\",\n    value: function getPlanets() {\n      this.getBody(\"https://swapi.co/api/planets/\");\n    }\n  }, {\n    key: \"getPlanet\",\n    value: function getPlanet(id) {\n      return this.getBody(\"https://swapi.co/api/planets/\".concat(id, \"/\"));\n    }\n  }, {\n    key: \"_transformPlanet\",\n    value: function _transformPlanet(res) {\n      var idRegExp = /\\/([0-9]*)\\/$/;\n      return {\n        name: res.name,\n        population: res.population,\n        Diameter: res.diameter,\n        RotationPeriod: res.rotation_period\n      };\n    }\n  }]);\n\n  return SwapiService;\n}();\n\nexport default SwapiService;","map":{"version":3,"sources":["C:\\stardb\\src\\services\\SwapiService.js"],"names":["SwapiService","url","fetch","res","ok","Error","status","json","getBody","results","id","idRegExp","name","population","Diameter","diameter","RotationPeriod","rotation_period"],"mappings":";;;;;IAAMA,Y;;;;;;;;;;;;gDACUC,G;;;;;;;uBACMC,KAAK,CAACD,GAAD,C;;;AAAjBE,gBAAAA,G;;oBACFA,GAAG,CAACC,E;;;;;sBACA,IAAIC,KAAJ,CAAUF,GAAG,CAACG,MAAd,C;;;;uBAEKH,GAAG,CAACI,IAAJ,E;;;;;;;;;;;;;;;;;;;;;gCAIJ;AACT,WAAKC,OAAL,CAAa,8BAAb;AACD;;;;;;;;;;;;;uBAEoB,KAAKA,OAAL,CAAa,iCAAb,C;;;AAAZL,gBAAAA,G;kDACAA,GAAG,CAACM,O;;;;;;;;;;;;;;;;;;iCAGD;AACV,WAAKD,OAAL,CAAa,+BAAb;AACD;;;8BACSE,E,EAAG;AACX,aAAO,KAAKF,OAAL,wCAA6CE,EAA7C,OAAP;AACD;;;qCACgBP,G,EAAI;AACnB,UAAMQ,QAAQ,GAAG,eAAjB;AACA,aAAM;AACJC,QAAAA,IAAI,EAACT,GAAG,CAACS,IADL;AAEJC,QAAAA,UAAU,EAAEV,GAAG,CAACU,UAFZ;AAGJC,QAAAA,QAAQ,EAACX,GAAG,CAACY,QAHT;AAIJC,QAAAA,cAAc,EAACb,GAAG,CAACc;AAJf,OAAN;AAMD;;;;;;AAEH,eAAejB,YAAf","sourcesContent":["class SwapiService  {\r\n  async getBody(url){\r\n    const res = await fetch(url);\r\n    if(!res.ok){\r\n      throw new Error(res.status)\r\n    }\r\n    return await res.json()\r\n\r\n\r\n  };\r\n  getPeople(){\r\n    this.getBody(\"https://swapi.co/api/people/\")\r\n  };\r\n  async getStarShips(){\r\n    const  res = await this.getBody(\"https://swapi.co/api/starships/\");\r\n    return res.results\r\n\r\n  };\r\n  getPlanets(){\r\n    this.getBody(\"https://swapi.co/api/planets/\")\r\n  }\r\n  getPlanet(id){\r\n    return this.getBody(`https://swapi.co/api/planets/${id}/`)\r\n  }\r\n  _transformPlanet(res){\r\n    const idRegExp = /\\/([0-9]*)\\/$/\r\n    return{\r\n      name:res.name,\r\n      population :res.population,\r\n      Diameter:res.diameter,\r\n      RotationPeriod:res.rotation_period\r\n    }\r\n  }\r\n}\r\nexport default SwapiService\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}