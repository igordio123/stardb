{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\stardb\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\stardb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\stardb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\stardb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar SwapiService =\n/*#__PURE__*/\nfunction () {\n  function SwapiService() {\n    _classCallCheck(this, SwapiService);\n  }\n\n  _createClass(SwapiService, [{\n    key: \"getBody\",\n    value: function () {\n      var _getBody = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(url) {\n        var getData, getJson;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(url);\n\n              case 2:\n                getData = _context.sent;\n\n                if (getData.ok) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(getData.status);\n\n              case 5:\n                getJson = getData.json();\n                return _context.abrupt(\"return\", getJson);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getBody(_x) {\n        return _getBody.apply(this, arguments);\n      }\n\n      return getBody;\n    }()\n  }]);\n\n  return SwapiService;\n}();","map":{"version":3,"sources":["C:\\stardb\\src\\index.js"],"names":["SwapiService","url","fetch","getData","ok","Error","status","getJson","json"],"mappings":";;;;;IAAMA,Y;;;;;;;;;;;;gDACSC,G;;;;;;;uBACWC,KAAK,CAACD,GAAD,C;;;AAArBE,gBAAAA,O;;oBACFA,OAAO,CAACC,E;;;;;sBACJ,IAAIC,KAAJ,CAAUF,OAAO,CAACG,MAAlB,C;;;AAEFC,gBAAAA,O,GAAUJ,OAAO,CAACK,IAAR,E;iDACTD,O","sourcesContent":["class SwapiService{\n async getBody(url){\n    const getData = await fetch(url);\n    if(!getData.ok){\n      throw new Error(getData.status)\n    }\n    const getJson = getData.json();\n    return getJson\n  };\n}\n\n\n"]},"metadata":{},"sourceType":"module"}